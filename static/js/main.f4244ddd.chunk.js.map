{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","user","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,YCFKC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SACMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,UCJtDM,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAY,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCqCnEG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAc,IAGhB,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARR,E,gEAWM,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,mCAGlHE,GACXC,KAAKF,SAAU,CAACP,YAAcQ,EAAEE,OAAOC,U,+BAGhC,IAAD,EAC4BF,KAAKV,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACZY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAEpG,OACE,sBAAK/B,UAAU,MAAf,UACE,kDAEA,cAAC,EAAD,CAAWW,YAAc,kBAAkBC,aAAcc,KAAKd,eAE9D,cAAC,EAAD,CAAUJ,SAAYqB,IALxB,Y,GAzBYI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4244ddd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './card-list.styles.css';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n                {props.monsters.map(monster => <Card key ={monster.id} monster={monster} />)}\r\n            </div>\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className = 'search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n)","import React , { Component } from 'react';  // This React library allows us to write this 'html' like syntaxes inside our javascript file.\nimport { CardList } from './components/card-list/card-list.component.jsx';\n\nimport './App.css';\n\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nclass App extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField : ''\n    };\n\n    this.handleChange = this.handleChange.bind(this); \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(user => this.setState({ monsters: user}))\n  }\n\n  handleChange(e) {\n    this.setState( {searchField : e.target.value} );\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        \n        <SearchBox placeholder = 'Search Monsters' handleChange={this.handleChange} />\n\n        <CardList monsters = {filteredMonsters}/>  {/*Here (monsters = {this.state.monsters}) is a props .. And everything inside this <CardList> JSX tag will be the props.children */}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; // ReactDom interacts with the virtual DOM \nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}